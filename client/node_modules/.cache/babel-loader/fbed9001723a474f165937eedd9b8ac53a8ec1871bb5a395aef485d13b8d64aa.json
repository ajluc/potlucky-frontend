{"ast":null,"code":"var _jsxFileName = \"/Users/cfhid/GA_SEIR/Projects/potlucky-front-end/client/src/components/Comments.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { GetCommentsForEvent, CreateComment } from '../services/CommentServices';\nimport Avatar from 'boring-avatars';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = _ref => {\n  _s();\n  let {\n    user,\n    eventId\n  } = _ref;\n  const initialState = {\n    userId: user.id,\n    eventId: eventId,\n    comment: ''\n  };\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(initialState);\n  const handleComments = async () => {\n    const data = await GetCommentsForEvent(eventId);\n    if (data) {\n      setComments(data);\n    }\n  };\n  useEffect(() => {\n    handleComments();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await CreateComment(newComment);\n    setNewComment(initialState);\n    handleComments();\n  };\n  const handleChange = event => {\n    setNewComment({\n      ...newComment,\n      [event.target.id]: event.target.value\n    });\n  };\n  return comments.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-header\",\n        children: [console.log(comment), /*#__PURE__*/_jsxDEV(Avatar, {\n          size: 40,\n          name: comment.author.name,\n          variant: \"beam\",\n          colors: ['#F9DED3', '#FDD1B6', '#FAB4B6', '#C7B6BE', '#89ABB4']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: comment.author.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"comment-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), comment.createdAt === comment.updatedAt ? /*#__PURE__*/_jsxDEV(\"b\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 56\n        }, this) : /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"edited\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 66\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"comment-date\",\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: comment.createdAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"comment\",\n        children: \"Write a comment... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"comment\",\n        value: newComment.comment,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Write the first comment!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"comment\",\n        children: \"Write a comment...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"comment\",\n        value: newComment.comment,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"QQHMaybjPCX3xnT5thZVWS5G7sM=\");\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useEffect","useState","GetCommentsForEvent","CreateComment","Avatar","Comments","user","eventId","initialState","userId","id","comment","comments","setComments","newComment","setNewComment","handleComments","data","handleSubmit","e","preventDefault","handleChange","event","target","value","length","map","console","log","author","name","username","createdAt","updatedAt"],"sources":["/Users/cfhid/GA_SEIR/Projects/potlucky-front-end/client/src/components/Comments.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { GetCommentsForEvent, CreateComment } from '../services/CommentServices'\nimport Avatar from 'boring-avatars'\n\nconst Comments = ({ user, eventId }) => {\n  const initialState = {\n    userId: user.id,\n    eventId: eventId,\n    comment: ''\n  }\n\n  const [comments, setComments] = useState([])\n  const [newComment, setNewComment] = useState(initialState)\n\n  const handleComments = async () => {\n    const data = await GetCommentsForEvent(eventId)\n    if (data) {\n      setComments(data)\n    }\n  }\n\n  useEffect(() => {\n    handleComments()\n  }, [])\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    await CreateComment(newComment)\n    setNewComment(initialState)\n    handleComments()\n  }\n\n  const handleChange = (event) => {\n    setNewComment({ ...newComment, [event.target.id]: event.target.value })\n  }\n\n  return comments.length > 0 ? (\n    <div>\n      {comments.map((comment) => (\n        <div className=\"comment\" key={comment.id}>\n          <div className=\"comment-header\">\n            {console.log(comment)}\n            <Avatar\n              size={40}\n              name={comment.author.name}\n              variant=\"beam\"\n              colors={['#F9DED3', '#FDD1B6', '#FAB4B6', '#C7B6BE', '#89ABB4']}\n            />\n            <h5>{comment.author.username}</h5>\n          </div>\n          <section className=\"comment-content\">\n            <p>{comment.comment}</p>\n            {comment.createdAt === comment.updatedAt ? <b></b> : <b>edited</b>}\n          </section>\n          <section className=\"comment-date\">\n            <h6>{comment.createdAt}</h6>\n          </section>\n        </div>\n      ))}\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"comment\">Write a comment... </label>\n        <input\n          type=\"text\"\n          id=\"comment\"\n          value={newComment.comment}\n          onChange={handleChange}\n        />\n      </form>\n    </div>\n  ) : (\n    <div>\n      <h2>Write the first comment!</h2>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"comment\">Write a comment...</label>\n        <input\n          type=\"text\"\n          id=\"comment\"\n          value={newComment.comment}\n          onChange={handleChange}\n        />\n      </form>\n    </div>\n  )\n}\n\nexport default Comments\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}